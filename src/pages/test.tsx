import Button from "@/components/Button";
import { axiosInstance } from "@/utils";
import { getProviders, useSession } from "next-auth/react";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Logo from "@/components/Logo";
import OrganizationCalendar from "@/components/organization/OrganizationCalendar";
import Header from "@/components/Header";
import axios from "axios";

export default function SignIn({ providers }: any) {
	const router = useRouter();
	const { data: session } = useSession();

	const [integration, setIntegration] = useState([]);

	useEffect(() => {
		async function loadIntegrations() {
			if (!session) return;
			console.log(session);
			const organization = await axiosInstance.api
				.get("/organization/listorganizationprofile/", { headers: { authorization: "Bearer " + session?.accessToken } })
				.then((response) => response.data[0])
				.catch(async (err) => {
					console.log(err.response);
					if (err.response.status === 401) await router.push("/");
					return { data: { success: false } };
				});
			const { integrations: newIntegrations } = await axiosInstance.api
				.get("/organization/integrations/calendar/" + organization.unique_id + "/", {
					headers: { authorization: "Bearer " + session?.accessToken }
				})
				.then((response) => response.data)
				.catch((err) => {
					console.log(err);
					return { data: { success: false } };
				});

			setIntegration(newIntegrations);
		}

		loadIntegrations();
	}, [router, session]);

	const [calData, setCalData] = useState(null);

	useEffect(() => {}, [integration]);

	const [value, onChange] = useState(new Date());

	const handleSubmit = async (event: any) => {
		event.preventDefault();
		await router.push("/api/integrations/gcal/create");
	};
	return (
		<>
			<Head>
				<title>Test</title>
				<meta name="description" content="Generated by create next app" />
			</Head>
			<Header />
			<main className="py-8">
				<form className="mx-auto w-full max-w-[550px] px-4" onSubmit={handleSubmit}>
					<div className="mb-4 text-center">
						<Logo width={180} />
					</div>
					<div className="min-h-[400px] rounded-large bg-white p-6 shadow-normal dark:bg-gray-800 md:py-8 md:px-12">
						<div className="mb-4">
							<Button btnType="submit" label="Get Google Auth" full={true} loader={false} disabled={false} />
						</div>
						<div>
							{integration?.map((integration: any, i) => (
								<Button
									btnType="button"
									full={true}
									loader={false}
									disabled={false}
									key={i}
									label={`Create ${integration.provider.charAt(0).toUpperCase() + integration.provider.slice(1)} Event`}
									handleClick={async () =>
										await axiosInstance.next_api.post("/api/integrations/gcal/createEvent", {
											googleCalendarIntegration: integration
										})
									}
								/>
							))}
						</div>
					</div>
				</form>
				<div className="relative w-full transform overflow-hidden rounded-[30px] bg-[#FBF9FF] text-left text-black shadow-xl transition-all dark:bg-gray-800 dark:text-white sm:my-8 sm:max-w-5xl">
					<OrganizationCalendar />
				</div>
			</main>
		</>
	);
}

export async function getServerSideProps(context: any) {
	const providers = await getProviders();
	return {
		props: {
			providers
		}
	};
}
