//@ts-nocheck
import { useCarrierId, useSettingsStore, useStore } from "@/utils/code";
import { getProviders } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect, useReducer, useState } from "react";
import { axiosInstance } from "../../api/axiosApi";
import Masonry, { ResponsiveMasonry } from "react-responsive-masonry"
import Job_card from "@/components/job_card";


export default function Home() {
    const router = useRouter();


	const cid = useCarrierId((state) => state.cid)
	const addcid = useCarrierId((state) => state.addcid)
	
    const [odetail, setodetail] = useState([])
    const [orgdetail, setorgdetail] = useState([])
    const [orgfounderdetail, setorgfounderdetail] = useState([])
    const [orggallerydetail, setorggallerydetail] = useState([])
    const [orgjobdetail, setorgjobdetail] = useState([])


    useEffect(() => {
        addcid(window.location.href.toString().split("/").slice(-2, -1)[0])
    }, [cid, addcid])


	async function loadOrgDetail(carrierID: any) {
		await axiosInstance
        .get(`/organization/get/organisationprofile/carrier/${carrierID}/`)
        .then((res) => {
			setodetail(res.data)
			setorgdetail(res.data["OrgProfile"])
			setorgfounderdetail(res.data["Founder"])
			setorggallerydetail(res.data["Gallery"])
			setorgjobdetail(res.data["Job"])
        })
	}

    useEffect(()=>{
        if(cid && Object.keys(odetail).length === 0){
            loadOrgDetail(cid)
        }
    },[cid,odetail])

	useEffect(()=>{
		console.log(typeof odetail)
		console.log(odetail)
		console.log(typeof orgdetail)
		console.log(orgdetail)
	},[odetail,orgdetail])

	const toggleDarkMode = useSettingsStore((state) => state.toggleDarkMode)
	const dark = useSettingsStore((state) => state.dark)

	useEffect(() => {
		if (dark) {
		document.querySelector('body').classList.add('dark')
		} else {
		document.querySelector('body').classList.remove('dark')
		}
	}, [dark])

    
    
	return (
		<>
			<Head>
				<title>Carrier Page</title>
				<meta name="description" content="Generated by create next app" />
			</Head>
			<main className="py-8">
			<button onClick={toggleDarkMode}>Toggle Dark Mode</button>
				<div className="md:px-26 mx-auto w-full max-w-[1920px] px-4 lg:px-40">
					{
					odetail && orgdetail && 
					<>
					{orgdetail.map((data,i)=>(
						<>
						<img src={`http://127.0.0.1:8000${data['logo']}`} alt="" className="max-h-[200px] w-full rounded-normal"  key={i}/>
						
						<div className="rounded-normal bg-white p-6 m-6 mt-12 shadow-normal dark:bg-gray-800">
						<div className="mx-auto w-full max-w-[1100px]"> 

						{orgfounderdetail.map((data,i)=>(
							<div key={i} className="m-2 p-2">
								<img src={`http://127.0.0.1:8000${data['image']}`} alt="" className="h-[100px] w-[100px] max-h-[100px] max-w-[100px] rounded-full" />
								<p>{data['name']}</p>
							</div>
						))}

						{data['about_founder'] && data['about_founder']!= '' && <div className="m-2">
							<p>{data['about_founder']}</p>
						</div>}

						{data['org_Url'] && data['org_Url']!= '' &&
						<Link href={`${data['org_Url']}`} target="_blank" rel="noreferrer" className="m-2">
						{data['org_Url']}
						</Link>}
						
						<div className="m-2">
						 	{data['company_Size'] && data['company_Size']!= '' && <p> Company Size : {data['company_Size']} Employees</p> }
							{data['headquarter_Location'] && data['headquarter_Location']!= '' && <p>HeadQuarter Location : {data['headquarter_Location']}</p> }
							{data['branch_Office'] && data['branch_Office']!= '' && <p>Branch Office : {data['branch_Office']}</p> }
							{data['funding_Details'] && data['funding_Details']!= '' && <p>Funding Details : {data['funding_Details']}</p> }
							{data['workplace_Type'] && data['workplace_Type']!= '' && <p>Workplace Type : {data['workplace_Type']}</p> }
						</div>

						<hr />

						{data['about_org'] && data['about_org']!= '' && <p>{data['about_org']}</p> }
						
						<hr />
						{data['organization_Benefits'] && data['organization_Benefits']!= '' && <>
						<b>Benefits</b>
						<p>{data['organization_Benefits']}</p>
						</>}

						{ orggallerydetail && <div className="bg-white dark:bg-gray-800 shadow-normal border border-teal-400 rounded-[30px] overflow-hidden mb-8">
							<div className="bg-gradient-to-r from-[#A382E5] to-[#60C3E2] py-4 px-10">
							<h2 className="text-white">Workplace Culture</h2>
							</div>
							<div className="py-6 px-4 md:px-10">
							<ResponsiveMasonry
								columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}
							>
								<Masonry className="masonary_grid">
								{orggallerydetail.map((data, i) => (
									<img
									src={`http://127.0.0.1:8000${data.image}`}
									alt="Gallery"
									className="w-full"
									key={i}
									/>
								))}
								</Masonry>
							</ResponsiveMasonry>
							</div>
						</div>}


						{orgjobdetail && <div className="bg-white dark:bg-gray-800 shadow-normal border border-teal-400 rounded-[30px] overflow-hidden">
							<div className="bg-gradient-to-r from-[#A382E5] to-[#60C3E2] py-4 px-10">
							<h2 className="text-white">All Jobs</h2>
							</div>
							<div className="py-6 px-4 md:px-10">
							<div className="flex flex-wrap mx-[-10px]">
								{orgjobdetail.map((data, i) => (
								<div
									className="px-[10px] w-full md:max-w-[50%] xl:max-w-[33.3333%] mb-4"
									key={i}
								>
									
									<Job_card data={data}/>
								</div>
								))}
							</div>
							</div>
						</div> }

						</div>
						</div>
						</>
					))}
					</>
					}
				</div>
			</main>
		</>
	);
}


export async function getServerSideProps(context: any) {
	const providers = await getProviders();
	return {
		props: {
			providers
		}
	};
}