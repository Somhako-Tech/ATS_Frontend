import OrgSideBar from "@/components/organization/SideBar";
import OrgTopBar from "@/components/organization/TopBar";
import Head from "next/head";
import { Dialog, Tab, Transition } from "@headlessui/react";
import { Fragment, useRef, useState } from "react";
import FormField from "@/components/FormField";
import Skeleton from 'react-loading-skeleton'
import 'react-loading-skeleton/dist/skeleton.css'
import Image from "next/image";
import userImg from "/public/images/user-image.png";
import Button from "@/components/Button";
import { Menu } from '@headlessui/react'
import startNewChat from "/public/images/no-data/iconGroup-4.png";

export default function Inbox() {
	const [sklLoad] = useState(true);
	const cancelButtonRef = useRef(null);
    const [addMembers, setAddMembers] = useState(false);
	const [createGroup, setCreateGroup] = useState(false);
	const [exitGroup, setExitGroup] = useState(false);
	const [deleteGroup, setDeleteGroup] = useState(false);

	const [togglePages, setTogglePages] = useState(true);
	function handleInboxPage() {
		setTogglePages(true);
	}
	function handleChatPage() {
		setTogglePages(false);
	}

	const MessageCards = ({sklLoad}:any) => {
		if(sklLoad === true) {
			return (
				<>
					<div
						className={
							"flex border border-transparent border-b-slate-200 px-3 py-4 last:border-b-0 dark:border-b-gray-600"
						}
					>
						<Skeleton circle width={50} height={50} />
						<div className="w-[calc(100%-50px)] pt-1 pl-3">
							<div className="mb-2 flex justify-between">
								<h5 className="text-sm font-semibold">
									<Skeleton width={100} />
								</h5>
								<Skeleton width={50} />
							</div>
							<Skeleton count={2} />
						</div>
					</div>
				</>
			)
		}
		return (
			<>
				<div
					className={
						"flex border border-transparent border-b-slate-200 px-3 py-4 last:border-b-0 hover:shadow-highlight dark:border-b-gray-600 dark:hover:bg-gray-900"
					}
				>
					<Image
						src={userImg}
						alt="User"
						width={150}
						className="h-[50px] w-[50px] rounded-full object-cover shadow-highlight"
					/>
					<div className="w-[calc(100%-50px)] pt-1 pl-3">
						<div className="mb-2 flex justify-between">
							<h5 className="text-sm font-semibold">Jack Paul</h5>
							<span className="block rounded bg-gray-200 py-1 px-2 text-[10px] font-semibold dark:bg-gray-600">
								3:30 PM
							</span>
						</div>
						<p className="clamp_2 text-[12px] text-darkGray">
							Your Interview has been scheduled for Software Developer Job at Organization Name Software Developer Job
							at Organization Name
						</p>
					</div>
				</div>
			</>
		);
	};

	return (
		<>
			<Head>
				<title>Inbox</title>
				<meta name="description" content="Generated by create next app" />
			</Head>
			<main>
				<OrgSideBar />
				<OrgTopBar />
				<div
					id="overlay"
					className="fixed left-0 top-0 z-[9] hidden h-full w-full bg-[rgba(0,0,0,0.2)] dark:bg-[rgba(255,255,255,0.2)]"
				></div>
				<div className="layoutWrap p-4 lg:p-8">
					<div className="flex flex-wrap">
						<div className="w-full md:max-w-[32%]">
							<div className="overflow-hidden rounded-normal border bg-white shadow-normal dark:border-gray-600 dark:bg-gray-800">
								<Tab.Group>
									<Tab.List className={"border-b px-6 pt-2 dark:border-gray-600"}>
										<Tab as={Fragment}>
											{({ selected }) => (
												<button
													className={
														"mr-6 border-b-4 py-3 font-semibold focus:outline-none" +
														" " +
														(selected
															? "border-primary text-primary"
															: "border-transparent text-darkGray dark:text-gray-400")
													}
													onClick={() => handleInboxPage()}
												>
													Inbox
												</button>
											)}
										</Tab>
										<Tab as={Fragment}>
											{({ selected }) => (
												<button
													className={
														"mr-6 border-b-4 py-3 font-semibold focus:outline-none" +
														" " +
														(selected
															? "border-primary text-primary"
															: "border-transparent text-darkGray dark:text-gray-400")
													}
													onClick={() => handleChatPage()}
												>
													Chats
												</button>
											)}
										</Tab>
									</Tab.List>
									<Tab.Panels>
										<Tab.Panel>
											<Tab.Group>
												<Tab.List className={"px-6"}>
													<Tab as={Fragment}>
														{({ selected }) => (
															<button
																className={
																	"mr-6 py-3 text-sm font-semibold focus:outline-none" +
																	" " +
																	(selected ? "text-primary" : "text-darkGray dark:text-gray-400")
																}
															>
																Applicants
															</button>
														)}
													</Tab>
													<Tab as={Fragment}>
														{({ selected }) => (
															<button
																className={
																	"mr-6 py-3 text-sm font-semibold focus:outline-none" +
																	" " +
																	(selected ? "text-primary" : "text-darkGray dark:text-gray-400")
																}
															>
																Vendors
															</button>
														)}
													</Tab>
												</Tab.List>
												<Tab.Panels>
													<Tab.Panel>
														<div className="p-4 pt-0">
															<FormField
																fieldType="input"
																inputType="search"
																placeholder="Search applicants"
																icon={<i className="fa-solid fa-magnifying-glass"></i>}
															/>
														</div>
														<div className="h-[calc(100vh-300px)] overflow-y-auto p-4 pt-0">
															{
																sklLoad
																?
																Array(5).fill(<MessageCards />)
																:
																Array(5).fill(<MessageCards sklLoad={true} />)
															}
														</div>
													</Tab.Panel>
													<Tab.Panel>
														<div className="p-4 pt-0">
															<FormField
																fieldType="input"
																inputType="search"
																placeholder="Search vendors"
																icon={<i className="fa-solid fa-magnifying-glass"></i>}
															/>
														</div>
														<div className="h-[calc(100vh-300px)] overflow-y-auto p-4 pt-0">
															{
																sklLoad
																?
																Array(5).fill(<MessageCards />)
																:
																Array(5).fill(<MessageCards sklLoad={true} />)
															}
														</div>
													</Tab.Panel>
												</Tab.Panels>
											</Tab.Group>
										</Tab.Panel>
										<Tab.Panel>
											<Tab.Group>
												<Tab.List className={"px-6"}>
													<Tab as={Fragment}>
														{({ selected }) => (
															<button
																className={
																	"mr-6 py-3 text-sm font-semibold focus:outline-none" +
																	" " +
																	(selected ? "text-primary" : "text-darkGray dark:text-gray-400")
																}
															>
																Internal Team
															</button>
														)}
													</Tab>
													<Tab as={Fragment}>
														{({ selected }) => (
															<button
																className={
																	"mr-6 py-3 text-sm font-semibold focus:outline-none" +
																	" " +
																	(selected ? "text-primary" : "text-darkGray dark:text-gray-400")
																}
															>
																Vendors
															</button>
														)}
													</Tab>
												</Tab.List>
												<Tab.Panels>
													<Tab.Panel>
														<div className="p-4 pt-0 flex items-center">
															<div className="grow">
																<FormField
																	fieldType="input"
																	inputType="search"
																	placeholder="Search team"
																	icon={<i className="fa-solid fa-magnifying-glass"></i>}
																/>
															</div>
															<button type="button" className="ml-2 w-6 py-2 text-darkGray dark:text-gray-400" onClick={() => setAddMembers(true)}>
																<i className="fa-solid fa-user-plus"></i>
															</button>
															<Menu as="div" className="relative">
																<Menu.Button className="ml-2 w-6 py-2 text-darkGray dark:text-gray-400">
																	<i className="fa-solid fa-ellipsis-vertical"></i>
																</Menu.Button>
																<Transition
																as={Fragment}
																enter="transition ease-out duration-100"
																enterFrom="transform opacity-0 scale-95"
																enterTo="transform opacity-100 scale-100"
																leave="transition ease-in duration-75"
																leaveFrom="transform opacity-100 scale-100"
																leaveTo="transform opacity-0 scale-95"
																>
																	<Menu.Items className={'absolute right-0 top-[100%] text-darkGray dark:text-gray-400 w-[200px] rounded bg-white py-2 shadow-normal dark:bg-gray-700'}>
																		<Menu.Item>
																			<button type="button" className="w-full text-left relative cursor-pointer px-4 py-2 text-sm font-bold hover:bg-gray-100 dark:hover:bg-gray-900 flex items-center" onClick={()=> setCreateGroup(true)}>
																				<i className="fa-solid fa-users mr-2"></i> Create Group
																			</button>
																		</Menu.Item>
																	</Menu.Items>
																</Transition>
															</Menu>
														</div>
														<div className="h-[calc(100vh-300px)] overflow-y-auto p-4 pt-0">
															{
																sklLoad
																?
																Array(5).fill(<MessageCards />)
																:
																Array(5).fill(<MessageCards sklLoad={true} />)
															}
														</div>
													</Tab.Panel>
													<Tab.Panel>
														<div className="p-4 pt-0 flex items-center">
															<div className="grow">
																<FormField
																	fieldType="input"
																	inputType="search"
																	placeholder="Search vendors"
																	icon={<i className="fa-solid fa-magnifying-glass"></i>}
																/>
															</div>
															<button type="button" className="ml-2 w-6 text-darkGray dark:text-gray-400" onClick={() => setAddMembers(true)}>
																<i className="fa-solid fa-user-plus"></i>
															</button>
														</div>
														<div className="h-[calc(100vh-300px)] overflow-y-auto p-4 pt-0">
															{
																sklLoad
																?
																Array(5).fill(<MessageCards />)
																:
																Array(5).fill(<MessageCards sklLoad={true} />)
															}
														</div>
													</Tab.Panel>
												</Tab.Panels>
											</Tab.Group>
										</Tab.Panel>
									</Tab.Panels>
								</Tab.Group>
							</div>
						</div>
						<div className="w-full pl-6 md:max-w-[68%]">
							<div className="relative h-full overflow-hidden rounded-normal border bg-white pb-[80px] shadow-normal dark:border-gray-600 dark:bg-gray-800">
								{togglePages ? (
									<>
										{
											sklLoad
											?
											<>
												<div className="h-[calc(100vh-212px)] overflow-y-auto">
													<div className="group">
														<div className="border-b py-6 px-4 group-last:border-b-0 dark:border-b-gray-600">
															<div className="mx-auto w-full max-w-[90%]">
																<div className="mb-4 flex items-center justify-between">
																	<Image
																		src={userImg}
																		alt="User"
																		width={150}
																		className="h-[50px] w-[50px] rounded-full object-cover shadow-highlight"
																	/>
																	<p className="text-right text-[12px] text-darkGray dark:text-gray-400">
																		10 Feb 2023
																		<br />
																		3:30 PM
																	</p>
																</div>
																<article className="text-sm text-darkGray dark:text-gray-400">
																	Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has
																	been the industry standard dummy text ever since the 1500s, when an unknown printer took
																	a galley of type and scrambled it to make a type specimen book. It has survived not only
																	five centuries, but also the leap into electronic typesetting, remaining essentially
																	unchanged. It was popularised in the 1960s with the release of Letraset sheets containing
																	Lorem Ipsum passages, and more recently with desktop publishing software like Aldus
																	PageMaker including versions of Lorem Ipsum.
																</article>
															</div>
														</div>
													</div>
													<div className="group">
														<div className="border-b py-6 px-4 group-last:border-b-0 dark:border-b-gray-600">
															<div className="mx-auto w-full max-w-[90%]">
																<div className="overflow-hidden rounded-large border dark:border-gray-500">
																	<div className="bg-gradient-to-b from-gradLightBlue to-gradDarkBlue p-6 text-center text-white">
																		<h3 className="mb-2 text-xl">Interview has been Scheduled</h3>
																		<p>You can find the details below</p>
																	</div>
																	<div className="py-6 px-10">
																		<h2 className="mb-4 text-lg font-bold">Hi Recruiter Name,</h2>
																		<p className="mb-6 text-sm text-darkGray dark:text-gray-400">
																			Your Interview has been scheduled for Software Developer Job at Organization Name
																		</p>
																		<div className="mb-2 flex flex-wrap">
																			<div className="w-full md:max-w-[75%]">
																				<ul>
																					<li className="mb-6 flex items-start">
																						<span className="w-30px mr-4 inline-block">
																							<i className="fa-solid fa-user text-[14px]"></i>
																						</span>
																						<aside className="grow">
																							<h5 className="font-bold">Interviewer</h5>
																							<p className="text-sm text-darkGray dark:text-gray-400">Adam Smith</p>
																						</aside>
																					</li>
																					<li className="mb-6 flex items-start">
																						<span className="w-30px mr-4 inline-block">
																							<i className="fa-solid fa-street-view text-[14px]"></i>
																						</span>
																						<aside className="grow">
																							<h5 className="font-bold">Interview Name</h5>
																							<p className="text-sm text-darkGray dark:text-gray-400">Software Developer</p>
																						</aside>
																					</li>
																					<li className="mb-6 flex items-start">
																						<span className="w-30px mr-4 inline-block">
																							<i className="fa-solid fa-clock text-[14px]"></i>
																						</span>
																						<aside className="grow">
																							<h5 className="font-bold">Event Duration</h5>
																							<p className="text-sm text-darkGray dark:text-gray-400">30 min</p>
																						</aside>
																					</li>
																				</ul>
																			</div>
																			<div className="w-full md:max-w-[25%]">
																				<aside className="mb-6 flex items-center">
																					<h5 className="mr-4 font-bold">Date:</h5>
																					<p className="text-sm text-darkGray dark:text-gray-400">05 Dec 2022</p>
																				</aside>
																				<aside className="mb-4 flex items-center">
																					<h5 className="mr-4 font-bold">Time:</h5>
																					<p className="text-sm text-darkGray dark:text-gray-400">02:00 PM</p>
																				</aside>
																			</div>
																		</div>
																		<div className="flex flex-wrap">
																			<div className="my-1 mr-4 last:mr-0">
																				<Button btnStyle="success" label="Reschedule" />
																			</div>
																			<div className="my-1 mr-4 last:mr-0">
																				<Button btnStyle="danger" label="Cancel" />
																			</div>
																		</div>
																	</div>
																</div>
															</div>
														</div>
													</div>
												</div>
												<div className="absolute left-0 bottom-0 w-full border-t bg-lightBlue p-3 dark:border-t-gray-600 dark:bg-gray-900">
													<div className="flex items-center rounded bg-white p-2 shadow-normal dark:bg-gray-800">
														<textarea
															name=""
															id=""
															className="h-[40px] w-[calc(100%-50px)] resize-none  border-0 bg-transparent focus:border-0 focus:shadow-none focus:outline-none focus:ring-0"
															placeholder="Type something..."
														></textarea>
														<button
															type="button"
															className="block w-[50px] border-l-2 border-gray-400 text-sm leading-normal"
														>
															<i className="fa-solid fa-paper-plane"></i>
														</button>
													</div>
												</div>
											</>
											:
											<>
												<div className="h-[calc(100vh-212px)] overflow-y-auto">
													{Array(3).fill(
													<div className="group">
														<div className="border-b py-6 px-4 group-last:border-b-0 dark:border-b-gray-600">
															<div className="mx-auto w-full max-w-[90%]">
																<div className="mb-4 flex items-center justify-between">
																	<Skeleton circle width={50} height={50} />
																	<p className="text-right text-[12px] text-darkGray dark:text-gray-400">
																		<Skeleton width={100} />
																		<Skeleton width={50} />
																	</p>
																</div>
																<Skeleton count={6} />
																<Skeleton width={40 + '%'} />
															</div>
														</div>
													</div>
													)}
												</div>
												<div className="absolute left-0 bottom-0 w-full border-t bg-lightBlue p-3 dark:border-t-gray-600 dark:bg-gray-900">
													<Skeleton height={50} />
												</div>
											</>
										}
									</>
								) : (
									<>
										<div className="border-b dark:border-b-gray-600">
											<div className="mx-auto w-full max-w-[90%] py-2 px-4 flex items-center">
												<Image
													src={userImg}
													alt="User"
													width={150}
													className="h-[50px] w-[50px] rounded-full object-cover shadow-highlight mr-4"
												/>
												<aside>
													<h4 className="font-bold text-lg flex items-center jusitfy-between">
														<span className="grow">Jack Paul</span>
														<Menu as="div" className="relative">
															<Menu.Button className="ml-2 w-6 text-darkGray dark:text-gray-400">
																<i className="fa-solid fa-ellipsis-vertical"></i>
															</Menu.Button>
															<Transition
															as={Fragment}
															enter="transition ease-out duration-100"
															enterFrom="transform opacity-0 scale-95"
															enterTo="transform opacity-100 scale-100"
															leave="transition ease-in duration-75"
															leaveFrom="transform opacity-100 scale-100"
															leaveTo="transform opacity-0 scale-95"
															>
																<Menu.Items className={'absolute right-0 top-[100%] text-darkGray dark:text-gray-400 w-[200px] rounded bg-white py-2 shadow-normal dark:bg-gray-700'}>
																	<Menu.Item>
																		<button type="button" className="w-full text-left relative cursor-pointer px-4 py-2 text-sm font-bold hover:bg-gray-100 dark:hover:bg-gray-900 flex items-center" onClick={()=> setCreateGroup(true)}>
																			Edit Group
																		</button>
																	</Menu.Item>
																	<Menu.Item>
																		<button type="button" className="w-full text-left relative cursor-pointer px-4 py-2 text-sm font-bold hover:bg-gray-100 dark:hover:bg-gray-900 flex items-center" onClick={() => setExitGroup(true)}>
																			Exit Group
																		</button>
																	</Menu.Item>
																	<div className="border-t dark:border-t-gray-500">
																		<p className="text-[10px] px-4 pt-2 pb-1 font-semibold">Created by Steven on 04 Feb 2021</p>
																		<Menu.Item>
																			<button type="button" className="w-full text-left relative cursor-pointer px-4 py-2 text-sm font-bold hover:bg-red-500 hover:text-white flex items-center" onClick={() => setDeleteGroup(true)}>
																				Delete Group
																			</button>
																		</Menu.Item>
																	</div>
																</Menu.Items>
															</Transition>
														</Menu>
													</h4>
													<p className="clamp_1 text-[12px] text-darkGray dark:text-gray-400">Lorem ipsum dolor sit amet consectetur. Pellentesque sagittis sed dictum lorem. Lorem ipsum dolor sit amet consectetur. Pellentesque sagittis sed dictum lorem.</p>
												</aside>
											</div>
										</div>
										<div className="h-[calc(100vh-280px)] overflow-y-auto">
											<div className="mx-auto w-full max-w-[90%] px-4">
												<div className="min-h-[400px] flex items-center justify-center">
													<div className="text-center py-8 w-full max-w-[300px] mx-auto">
														<div className="mb-6 p-2">
															<Image src={startNewChat} alt="No Data" width={300} className="w-auto max-w-[150px] max-h-[150px] mx-auto" />
														</div>
														<h5 className="font-bold">Start New Chat</h5>
													</div>
												</div>
												<div className="flex items-start py-4">
													<Image
														src={userImg}
														alt="User"
														width={150}
														className="h-[50px] w-[50px] rounded-full object-cover shadow-highlight"
													/>
													<div className="pl-4 pt-1">
														<h4 className="font-bold mb-2">
															Jack Paul
															<span className="text-[10px] text-darkGray dark:text-gray-400 pl-3">4:27 PM</span>
														</h4>
														<article className="text-sm text-darkGray dark:text-gray-400">
															Lorem ipsum dolor sit amet consectetur. Pellentesque sagittis sed dictum lorem. Neque eget faucibus dolor risus posuere vitae sodales. Sit odio morbi dolor egestas sit aliquam velit cum. Pharetra tortor sit vestibulum 
														</article>
													</div>
												</div>
												<div className="flex items-start py-4">
													<Image
														src={userImg}
														alt="User"
														width={150}
														className="h-[50px] w-[50px] rounded-full object-cover shadow-highlight"
													/>
													<div className="pl-4 pt-1">
														<h4 className="font-bold mb-2">
															Me
															<span className="text-[10px] text-darkGray dark:text-gray-400 pl-3">4:27 PM</span>
														</h4>
														<article className="text-sm text-darkGray dark:text-gray-400">
															Lorem ipsum dolor sit amet consectetur. Pellentesque sagittis sed dictum lorem. Neque eget faucibus dolor risus posuere vitae sodales. Sit odio morbi dolor egestas sit aliquam velit cum. Pharetra tortor sit vestibulum 
														</article>
													</div>
												</div>
												<div className="flex items-start py-4">
													<Image
														src={userImg}
														alt="User"
														width={150}
														className="h-[50px] w-[50px] rounded-full object-cover shadow-highlight"
													/>
													<div className="pl-4 pt-1">
														<h4 className="font-bold mb-2">
															Jack Paul
															<span className="text-[10px] text-darkGray dark:text-gray-400 pl-3">4:27 PM</span>
														</h4>
														<article className="text-sm text-darkGray dark:text-gray-400">
															Lorem ipsum dolor sit amet consectetur. Pellentesque sagittis sed dictum lorem. Neque eget faucibus dolor risus posuere vitae sodales. Sit odio morbi dolor egestas sit aliquam velit cum. Pharetra tortor sit vestibulum 
														</article>
													</div>
												</div>
												<div className="flex items-start py-4">
													<Image
														src={userImg}
														alt="User"
														width={150}
														className="h-[50px] w-[50px] rounded-full object-cover shadow-highlight"
													/>
													<div className="pl-4 pt-1">
														<h4 className="font-bold mb-2">
															Me
															<span className="text-[10px] text-darkGray dark:text-gray-400 pl-3">4:27 PM</span>
														</h4>
														<article className="text-sm text-darkGray dark:text-gray-400">
															Lorem ipsum dolor sit amet consectetur. Pellentesque sagittis sed dictum lorem. Neque eget faucibus dolor risus posuere vitae sodales. Sit odio morbi dolor egestas sit aliquam velit cum. Pharetra tortor sit vestibulum 
														</article>
													</div>
												</div>
												<div className="flex items-start py-4">
													<Image
														src={userImg}
														alt="User"
														width={150}
														className="h-[50px] w-[50px] rounded-full object-cover shadow-highlight"
													/>
													<div className="pl-4 pt-1">
														<h4 className="font-bold mb-2">
															Jack Paul
															<span className="text-[10px] text-darkGray dark:text-gray-400 pl-3">4:27 PM</span>
														</h4>
														<article className="text-sm text-darkGray dark:text-gray-400">
															Lorem ipsum dolor sit amet consectetur. Pellentesque sagittis sed dictum lorem. Neque eget faucibus dolor risus posuere vitae sodales. Sit odio morbi dolor egestas sit aliquam velit cum. Pharetra tortor sit vestibulum 
														</article>
													</div>
												</div>
												<div className="flex items-start py-4">
													<Image
														src={userImg}
														alt="User"
														width={150}
														className="h-[50px] w-[50px] rounded-full object-cover shadow-highlight"
													/>
													<div className="pl-4 pt-1">
														<h4 className="font-bold mb-2">
															Me
															<span className="text-[10px] text-darkGray dark:text-gray-400 pl-3">4:27 PM</span>
														</h4>
														<article className="text-sm text-darkGray dark:text-gray-400">
															Lorem ipsum dolor sit amet consectetur. Pellentesque sagittis sed dictum lorem. Neque eget faucibus dolor risus posuere vitae sodales. Sit odio morbi dolor egestas sit aliquam velit cum. Pharetra tortor sit vestibulum 
														</article>
													</div>
												</div>
											</div>
										</div>
										<div className="absolute left-0 bottom-0 w-full border-t bg-lightBlue p-3 dark:border-t-gray-600 dark:bg-gray-900">
											<div className="flex items-center rounded bg-white p-2 shadow-normal dark:bg-gray-800">
												<textarea
													name=""
													id=""
													className="h-[40px] w-[calc(100%-50px)] resize-none  border-0 bg-transparent focus:border-0 focus:shadow-none focus:outline-none focus:ring-0"
													placeholder="Type something..."
												></textarea>
												<button
													type="button"
													className="block w-[50px] border-l-2 border-gray-400 text-sm leading-normal"
												>
													<i className="fa-solid fa-paper-plane"></i>
												</button>
											</div>
										</div>
									</>
								)}
							</div>
						</div>
					</div>
				</div>
			</main>
			<Transition.Root show={addMembers} as={Fragment}>
				<Dialog as="div" className="relative z-40" initialFocus={cancelButtonRef} onClose={setAddMembers}>
					<Transition.Child
						as={Fragment}
						enter="ease-out duration-300"
						enterFrom="opacity-0"
						enterTo="opacity-100"
						leave="ease-in duration-200"
						leaveFrom="opacity-100"
						leaveTo="opacity-0"
					>
						<div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />
					</Transition.Child>

					<div className="fixed inset-0 z-10 overflow-y-auto">
						<div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center">
							<Transition.Child
								as={Fragment}
								enter="ease-out duration-300"
								enterFrom="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
								enterTo="opacity-100 translate-y-0 sm:scale-100"
								leave="ease-in duration-200"
								leaveFrom="opacity-100 translate-y-0 sm:scale-100"
								leaveTo="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
							>
								<Dialog.Panel className="relative w-full transform overflow-hidden rounded-[30px] bg-[#FBF9FF] text-left text-black shadow-xl transition-all dark:bg-gray-800 dark:text-white sm:my-8 sm:max-w-xl">
									<div className="flex items-center justify-between bg-gradient-to-b from-gradLightBlue to-gradDarkBlue px-8 py-3 text-white">
										<h4 className="flex items-center font-semibold leading-none">
											Add new memeber to chat
										</h4>
										<button
											type="button"
											className="leading-none hover:text-gray-700"
											onClick={() => setAddMembers(false)}
										>
											<i className="fa-solid fa-xmark"></i>
										</button>
									</div>
									<div className="p-8 pb-0">
										<FormField
											fieldType="input"
											inputType="search"
											placeholder="Search team"
											icon={<i className="fa-solid fa-magnifying-glass"></i>}
										/>
									</div>
									<div className="py-2">
										<div className="max-h-[300px] overflow-y-auto px-8">
											{Array(20).fill(
											<div className="my-1 border dark:border-gray-600 rounded py-2 px-4 flex items-center justify-between">
												<div className="flex items-center grow pr-2">
													<Image
														src={userImg}
														alt="User"
														width={150}
														className="h-[35px] w-[35px] rounded-full object-cover shadow-highlight mr-4"
													/>
													<h6 className="font-semibold text-sm">Jacob Adam</h6>
												</div>
												<aside>
													<button type="button" className="text-darkGray dark:text-gray-400 text-sm">Chat</button>
												</aside>
											</div>
											)}
										</div>
									</div>
								</Dialog.Panel>
							</Transition.Child>
						</div>
					</div>
				</Dialog>
			</Transition.Root>
			<Transition.Root show={createGroup} as={Fragment}>
				<Dialog as="div" className="relative z-40" initialFocus={cancelButtonRef} onClose={setCreateGroup}>
					<Transition.Child
						as={Fragment}
						enter="ease-out duration-300"
						enterFrom="opacity-0"
						enterTo="opacity-100"
						leave="ease-in duration-200"
						leaveFrom="opacity-100"
						leaveTo="opacity-0"
					>
						<div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />
					</Transition.Child>

					<div className="fixed inset-0 z-10 overflow-y-auto">
						<div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center">
							<Transition.Child
								as={Fragment}
								enter="ease-out duration-300"
								enterFrom="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
								enterTo="opacity-100 translate-y-0 sm:scale-100"
								leave="ease-in duration-200"
								leaveFrom="opacity-100 translate-y-0 sm:scale-100"
								leaveTo="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
							>
								<Dialog.Panel className="relative w-full transform overflow-hidden rounded-[30px] bg-[#FBF9FF] text-left text-black shadow-xl transition-all dark:bg-gray-800 dark:text-white sm:my-8 sm:max-w-xl">
									<div className="flex items-center justify-between bg-gradient-to-b from-gradLightBlue to-gradDarkBlue px-8 py-3 text-white">
										<h4 className="flex items-center font-semibold leading-none">
											Create Group
										</h4>
										<button
											type="button"
											className="leading-none hover:text-gray-700"
											onClick={() => setCreateGroup(false)}
										>
											<i className="fa-solid fa-xmark"></i>
										</button>
									</div>
									<div className="p-8 pb-0">
										<FormField fieldType="input" inputType="text" label="Group Name" required />
										<FormField fieldType="textarea" label="Group Description" />
									</div>
									<div className="py-2">
										<h5 className="px-8 mb-1 font-bold">Select Members</h5>
										<div className="max-h-[300px] overflow-y-auto px-8">
											<div className="my-1 border dark:border-gray-600 rounded py-2 px-4 flex items-center justify-between">
												<div className="flex items-center grow pr-2">
													<Image
														src={userImg}
														alt="User"
														width={150}
														className="h-[35px] w-[35px] rounded-full object-cover shadow-highlight mr-4"
													/>
													<h6 className="font-semibold text-sm">Jacob Adam</h6>
												</div>
												<aside>
													<button type="button" className="text-red-500 text-sm">Remove</button>
												</aside>
											</div>
											{Array(10).fill(
											<div className="my-1 border dark:border-gray-600 rounded py-2 px-4 flex items-center justify-between">
												<div className="flex items-center grow pr-2">
													<Image
														src={userImg}
														alt="User"
														width={150}
														className="h-[35px] w-[35px] rounded-full object-cover shadow-highlight mr-4"
													/>
													<h6 className="font-semibold text-sm">Jacob Adam</h6>
												</div>
												<aside>
													<button type="button" className="text-darkGray dark:text-gray-400 text-sm">Add</button>
												</aside>
											</div>
											)}
										</div>
                                        <div className="text-center">
                                            <Button label="Done" />
                                        </div>
									</div>
								</Dialog.Panel>
							</Transition.Child>
						</div>
					</div>
				</Dialog>
			</Transition.Root>
			<Transition.Root show={exitGroup} as={Fragment}>
				<Dialog as="div" className="relative z-40" initialFocus={cancelButtonRef} onClose={setExitGroup}>
					<Transition.Child
						as={Fragment}
						enter="ease-out duration-300"
						enterFrom="opacity-0"
						enterTo="opacity-100"
						leave="ease-in duration-200"
						leaveFrom="opacity-100"
						leaveTo="opacity-0"
					>
						<div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />
					</Transition.Child>

					<div className="fixed inset-0 z-10 overflow-y-auto">
						<div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center">
							<Transition.Child
								as={Fragment}
								enter="ease-out duration-300"
								enterFrom="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
								enterTo="opacity-100 translate-y-0 sm:scale-100"
								leave="ease-in duration-200"
								leaveFrom="opacity-100 translate-y-0 sm:scale-100"
								leaveTo="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
							>
								<Dialog.Panel className="relative w-full transform overflow-hidden rounded-[30px] bg-[#FBF9FF] text-left text-black shadow-xl transition-all dark:bg-gray-800 dark:text-white sm:my-8 sm:max-w-lg">
									<div className="flex items-center justify-between bg-gradient-to-b from-gradLightBlue to-gradDarkBlue px-8 py-3 text-white">
										<h4 className="flex items-center font-semibold leading-none">
											Exit Group
										</h4>
										<button
											type="button"
											className="leading-none hover:text-gray-700"
											onClick={() => setExitGroup(false)}
										>
											<i className="fa-solid fa-xmark"></i>
										</button>
									</div>
									<div className="p-8">
										<h3 className="text-center font-bold text-lg mb-4">Are you sure want to exit from this group?</h3>
										<div className="flex flex-wrap justify-center">
											<div className="my-1 mr-4 last:mr-0">
                                                <Button btnStyle="danger" label="No" />
                                            </div>
                                            <div className="my-1 mr-4 last:mr-0">
                                                <Button label="Yes" />
                                            </div>
                                        </div>
									</div>
								</Dialog.Panel>
							</Transition.Child>
						</div>
					</div>
				</Dialog>
			</Transition.Root>
			<Transition.Root show={deleteGroup} as={Fragment}>
				<Dialog as="div" className="relative z-40" initialFocus={cancelButtonRef} onClose={setDeleteGroup}>
					<Transition.Child
						as={Fragment}
						enter="ease-out duration-300"
						enterFrom="opacity-0"
						enterTo="opacity-100"
						leave="ease-in duration-200"
						leaveFrom="opacity-100"
						leaveTo="opacity-0"
					>
						<div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />
					</Transition.Child>

					<div className="fixed inset-0 z-10 overflow-y-auto">
						<div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center">
							<Transition.Child
								as={Fragment}
								enter="ease-out duration-300"
								enterFrom="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
								enterTo="opacity-100 translate-y-0 sm:scale-100"
								leave="ease-in duration-200"
								leaveFrom="opacity-100 translate-y-0 sm:scale-100"
								leaveTo="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
							>
								<Dialog.Panel className="relative w-full transform overflow-hidden rounded-[30px] bg-[#FBF9FF] text-left text-black shadow-xl transition-all dark:bg-gray-800 dark:text-white sm:my-8 sm:max-w-lg">
									<div className="flex items-center justify-between bg-gradient-to-b from-gradLightBlue to-gradDarkBlue px-8 py-3 text-white">
										<h4 className="flex items-center font-semibold leading-none">
											Delete Group
										</h4>
										<button
											type="button"
											className="leading-none hover:text-gray-700"
											onClick={() => setDeleteGroup(false)}
										>
											<i className="fa-solid fa-xmark"></i>
										</button>
									</div>
									<div className="p-8">
										<h3 className="text-center font-bold text-lg mb-4">Are you sure want to delete this group?</h3>
										<div className="flex flex-wrap justify-center">
											<div className="my-1 mr-4 last:mr-0">
                                                <Button btnStyle="danger" label="No" />
                                            </div>
                                            <div className="my-1 mr-4 last:mr-0">
                                                <Button label="Yes" />
                                            </div>
                                        </div>
									</div>
								</Dialog.Panel>
							</Transition.Child>
						</div>
					</div>
				</Dialog>
			</Transition.Root>
		</>
	);
}
