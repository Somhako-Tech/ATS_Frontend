import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { axiosInstance } from "@/utils";
import { getToken } from "next-auth/jwt";
import { useSession } from "next-auth/react";
import Orgsidebar from "@/components/organization/SideBar";
import Orgtopbar from "@/components/organization/TopBar";
import { axiosInstanceAuth } from "@/pages/api/axiosApi";
import { useEffect, Fragment, useRef, useState } from "react";
import { useApplicantStore } from "@/utils/code";
import Button from "@/components/Button";
import { Listbox, Transition, Dialog } from "@headlessui/react";
import Image from "next/image";
import userImg from "/public/images/user-image.png";
import socialIcon from "/public/images/social/linkedin-icon.png";
import boardIcon from "/public/images/board-icon.png";
import FormField from "@/components/FormField";
import { Menu } from "@headlessui/react";
import TeamMembers from "@/components/TeamMembers";

const jobs = [
	{ id: 1, name: "Software Developer", unavailable: false },
	{ id: 2, name: "Human Resource", unavailable: false },
	{ id: 3, name: "Lead Generation", unavailable: false },
	{ id: 4, name: "IT Manager", unavailable: true },
	{ id: 5, name: "Data Analyst", unavailable: false },
	{ id: 6, name: "All", unavailable: false }
];

export default function Home() {
	const router = useRouter();

	const [selectedJob, setSelectedJob] = useState(jobs[0]);

	const cancelButtonRef = useRef(null);
	const [socialPopup, setSocialPopup] = useState(false);

	const applicantlist = useApplicantStore((state) => state.applicantlist);
	const setapplicantlist = useApplicantStore((state) => state.setapplicantlist);
	const jobid = useApplicantStore((state) => state.jobid);
	const setjobid = useApplicantStore((state) => state.setjobid);
	const canid = useApplicantStore((state) => state.canid);
	const setcanid = useApplicantStore((state) => state.setcanid);

	const { data: session } = useSession();
	const [token, settoken] = useState("");
	const [refersh, setrefersh] = useState(0);

	useEffect(() => {
		if (session) {
			settoken(session.accessToken as string);
		} else if (!session) {
			settoken("");
		}
	}, [session]);

	const axiosInstanceAuth2 = axiosInstanceAuth(token);

	async function loadApplicant() {
		await axiosInstanceAuth2
			.get(`/job/listapplicant/`)
			.then(async (res) => {
				console.log(res.data);
				setapplicantlist(res.data);
				setrefersh(0);
			})
			.catch((err) => {
				console.log(err);
				setrefersh(0);
			});
	}

	useEffect(() => {
		if ((token.length > 0 && applicantlist.length <= 0) || refersh != 0) {
			loadApplicant();
		}
	}, [token, applicantlist, refersh]);

	return (
		<>
			<Head>
				<title>Applicants</title>
				<meta name="description" content="Generated by create next app" />
			</Head>
			<main>
				<Orgsidebar />
				<Orgtopbar />
				<div id="overlay" className="fixed left-0 top-0 z-[9] hidden h-full w-full bg-[rgba(0,0,0,0.2)]"></div>
				<div className="layoutWrap">
					<div className="flex flex-wrap items-center justify-between bg-white dark:bg-gray-800 py-6 px-4 py-4 shadow-normal lg:px-8">
						<div className="mr-3">
							<Listbox value={selectedJob} onChange={setSelectedJob}>
								<Listbox.Button className={"text-xl font-bold"}>
									{selectedJob.name} <i className="fa-solid fa-chevron-down ml-2 text-sm"></i>
								</Listbox.Button>
								<Transition
									enter="transition duration-100 ease-out"
									enterFrom="transform scale-95 opacity-0"
									enterTo="transform scale-100 opacity-100"
									leave="transition duration-75 ease-out"
									leaveFrom="transform scale-100 opacity-100"
									leaveTo="transform scale-95 opacity-0"
								>
									<Listbox.Options
										className={"absolute left-0 top-[100%] mt-2 w-[250px] rounded-normal bg-white dark:bg-gray-700 py-2 shadow-normal"}
									>
										{jobs.map((item) => (
											<Listbox.Option
												key={item.id}
												value={item}
												disabled={item.unavailable}
												className="clamp_1 relative cursor-pointer px-6 py-2 pl-8 text-sm hover:bg-gray-100 dark:hover:bg-gray-900"
											>
												{({ selected }) => (
													<>
														<span className={` ${selected ? "font-bold" : "font-normal"}`}>{item.name}</span>
														{selected ? (
															<span className="absolute left-3">
																<i className="fa-solid fa-check"></i>
															</span>
														) : null}
													</>
												)}
											</Listbox.Option>
										))}
									</Listbox.Options>
								</Transition>
							</Listbox>
						</div>
						<aside className="flex items-center">
							<div className="mr-4 flex items-center">
								<p className="mr-3 font-semibold">Add Board</p>
								<button
									type="button"
									className="h-7 w-7 rounded bg-gray-400 text-sm text-white hover:bg-gray-700"
									onClick={() => setSocialPopup(true)}
								>
									<i className="fa-solid fa-plus"></i>
								</button>
							</div>
							<TeamMembers />
						</aside>
					</div>
					<div className="flex h-[calc(100vh-155px)] overflow-auto p-4 lg:p-8">
						<div className="min-w-[300px] px-2">
							<h5 className="mb-4 text-lg font-semibold text-darkGray dark:text-white">Sourced</h5>
							<div className="mb-4 rounded-normal bg-white py-2 px-4 shadow-normal dark:bg-gray-700">
								<div className="mb-2 flex items-center justify-between">
									<aside className="flex items-center">
										<Image src={userImg} alt="User" width={30} className="h-[30px] rounded-full object-cover" />
										<h5 className="pl-4 text-sm font-semibold">Anne Jacob</h5>
									</aside>
									<aside>
										<Image src={socialIcon} alt="Social" className="h-[16px] w-auto" />
									</aside>
								</div>
								<p className="mb-1 text-[12px] text-darkGray dark:text-white">ID - 301045</p>
								<div className="flex items-center justify-between">
									<aside className="flex items-center text-[12px] text-darkGray dark:text-white">
										<i className="fa-solid fa-calendar-days mr-2 text-[16px]"></i>
										<p>25 Dec 2023</p>
									</aside>
									<Button btnStyle="outlined" label="View" />
								</div>
							</div>
							<div className="mb-4 rounded-normal bg-white py-2 px-4 shadow-normal dark:bg-gray-700">
								<div className="mb-2 flex items-center justify-between">
									<aside className="flex items-center">
										<Image src={userImg} alt="User" width={30} className="h-[30px] rounded-full object-cover" />
										<h5 className="pl-4 text-sm font-semibold">Anne Jacob</h5>
									</aside>
									<aside>
										<Image src={socialIcon} alt="Social" className="h-[16px] w-auto" />
									</aside>
								</div>
								<p className="mb-1 text-[12px] text-darkGray dark:text-white">ID - 301045</p>
								<div className="flex items-center justify-between">
									<aside className="flex items-center text-[12px] text-darkGray dark:text-white">
										<i className="fa-solid fa-calendar-days mr-2 text-[16px]"></i>
										<p>25 Dec 2023</p>
									</aside>
									<Button btnStyle="outlined" label="View" />
								</div>
							</div>
						</div>
						<div className="min-w-[300px] px-2">
							<h5 className="mb-4 text-lg font-semibold text-darkGray dark:text-white">Shortlist</h5>
							{Array(10).fill(
								<div className="mb-4 rounded-normal bg-white py-2 px-4 shadow-normal dark:bg-gray-700">
									<div className="mb-2 flex items-center justify-between">
										<aside className="flex items-center">
											<Image src={userImg} alt="User" width={30} className="h-[30px] rounded-full object-cover" />
											<h5 className="pl-4 text-sm font-semibold">Anne Jacob</h5>
										</aside>
										<aside>
											<Image src={socialIcon} alt="Social" className="h-[16px] w-auto" />
										</aside>
									</div>
									<p className="mb-1 text-[12px] text-darkGray dark:text-white">ID - 301045</p>
									<div className="flex items-center justify-between">
										<aside className="flex items-center text-[12px] text-darkGray dark:text-white">
											<i className="fa-solid fa-calendar-days mr-2 text-[16px]"></i>
											<p>25 Dec 2023</p>
										</aside>
										<Button btnStyle="outlined" label="View" />
									</div>
								</div>
							)}
						</div>
						<div className="min-w-[300px] px-2">
							<h5 className="mb-4 text-lg font-semibold text-darkGray dark:text-white">Interview</h5>
							<div className="mb-4 rounded-normal bg-white py-2 px-4 shadow-normal dark:bg-gray-700">
								<div className="mb-2 flex items-center justify-between">
									<aside className="flex items-center">
										<Image src={userImg} alt="User" width={30} className="h-[30px] rounded-full object-cover" />
										<h5 className="pl-4 text-sm font-semibold">Anne Jacob</h5>
									</aside>
									<aside>
										<Image src={socialIcon} alt="Social" className="h-[16px] w-auto" />
									</aside>
								</div>
								<p className="mb-1 text-[12px] text-darkGray dark:text-white">ID - 301045</p>
								<div className="flex items-center justify-between">
									<aside className="flex items-center text-[12px] text-darkGray dark:text-white">
										<i className="fa-solid fa-calendar-days mr-2 text-[16px]"></i>
										<p>25 Dec 2023</p>
									</aside>
									<Button btnStyle="outlined" label="View" />
								</div>
							</div>
						</div>
						<div className="min-w-[300px] px-2">
							<h5 className="mb-4 text-lg font-semibold text-darkGray dark:text-white">Hired</h5>
							<div className="mb-4 rounded-normal bg-white py-2 px-4 shadow-normal dark:bg-gray-700">
								<div className="mb-2 flex items-center justify-between">
									<aside className="flex items-center">
										<Image src={userImg} alt="User" width={30} className="h-[30px] rounded-full object-cover" />
										<h5 className="pl-4 text-sm font-semibold">Anne Jacob</h5>
									</aside>
									<aside>
										<Image src={socialIcon} alt="Social" className="h-[16px] w-auto" />
									</aside>
								</div>
								<p className="mb-1 text-[12px] text-darkGray dark:text-white">ID - 301045</p>
								<div className="flex items-center justify-between">
									<aside className="flex items-center text-[12px] text-darkGray dark:text-white">
										<i className="fa-solid fa-calendar-days mr-2 text-[16px]"></i>
										<p>25 Dec 2023</p>
									</aside>
									<Button btnStyle="outlined" label="View" />
								</div>
							</div>
						</div>
						<div className="min-w-[300px] px-2">
							<h5 className="mb-4 text-lg font-semibold text-darkGray dark:text-white">Offered Letter</h5>
							<div className="mb-4 rounded-normal bg-white py-2 px-4 shadow-normal dark:bg-gray-700">
								<div className="mb-2 flex items-center justify-between">
									<aside className="flex items-center">
										<Image src={userImg} alt="User" width={30} className="h-[30px] rounded-full object-cover" />
										<h5 className="pl-4 text-sm font-semibold">Anne Jacob</h5>
									</aside>
									<aside>
										<Image src={socialIcon} alt="Social" className="h-[16px] w-auto" />
									</aside>
								</div>
								<p className="mb-1 text-[12px] text-darkGray dark:text-white">ID - 301045</p>
								<div className="flex items-center justify-between">
									<aside className="flex items-center text-[12px] text-darkGray dark:text-white">
										<i className="fa-solid fa-calendar-days mr-2 text-[16px]"></i>
										<p>25 Dec 2023</p>
									</aside>
									<Button btnStyle="outlined" label="View" />
								</div>
							</div>
						</div>
					</div>
					{applicantlist &&
						applicantlist.map((data, i) => (
							<ul
								key={i}
								className="m-4 w-full list-disc rounded-normal bg-white p-4 p-6 shadow-normal hover:bg-lightBlue dark:bg-gray-700 dark:hover:bg-gray-600"
							>
								<li>
									Aplicant Id : <span className="text-lg font-bold">{data["arefid"]}</span>
								</li>
								<li>
									Job Id : <span className="text-lg font-bold">{data["job"]["refid"]}</span>
								</li>
								<li>
									Candidate Id : <span className="text-lg font-bold"> {data["user"]["erefid"]}</span>
								</li>
								<li>
									Applicant Status : <span className="text-lg font-bold">{data["status"]}</span>
								</li>
								<li>
									Candidate Email : <span className="text-lg font-bold">{data["user"]["email"]}</span>
								</li>
								<li>
									Job Title : <span className="text-lg font-bold">{data["job"]["job_title"]}</span>
								</li>
								<li>
									<Button
										label="View"
										loader={false}
										btnType="button"
										handleClick={() => {
											setjobid(data["job"]["refid"]);
											setcanid(data["user"]["erefid"]);
											router.push("applicants/detail");
										}}
									/>
								</li>
							</ul>
						))}
				</div>
			</main>
			<Transition.Root show={socialPopup} as={Fragment}>
				<Dialog as="div" className="relative z-40" initialFocus={cancelButtonRef} onClose={setSocialPopup}>
					<Transition.Child
						as={Fragment}
						enter="ease-out duration-300"
						enterFrom="opacity-0"
						enterTo="opacity-100"
						leave="ease-in duration-200"
						leaveFrom="opacity-100"
						leaveTo="opacity-0"
					>
						<div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />
					</Transition.Child>

					<div className="fixed inset-0 z-10 overflow-y-auto">
						<div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center">
							<Transition.Child
								as={Fragment}
								enter="ease-out duration-300"
								enterFrom="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
								enterTo="opacity-100 translate-y-0 sm:scale-100"
								leave="ease-in duration-200"
								leaveFrom="opacity-100 translate-y-0 sm:scale-100"
								leaveTo="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
							>
								<Dialog.Panel className="relative w-full transform overflow-hidden rounded-[30px] bg-[#FBF9FF] text-left text-black shadow-xl transition-all dark:bg-gray-800 dark:text-white sm:my-8 sm:max-w-lg">
									<div className="flex items-center justify-between bg-gradient-to-b from-gradLightBlue to-gradDarkBlue px-8 py-3 text-white">
										<h4 className="flex items-center font-semibold leading-none">
											<Image src={boardIcon} alt="Add" width={24} className="mr-3" />
											Add Board
										</h4>
										<button
											type="button"
											className="leading-none hover:text-gray-700"
											onClick={() => setSocialPopup(false)}
										>
											<i className="fa-solid fa-xmark"></i>
										</button>
									</div>
									<div className="p-8">
										<FormField
											fieldType="input"
											inputType="text"
											label="Board Title"
											placeholder="Assign new board title"
										/>
										<div className="text-center">
											<Button label="Save" />
										</div>
									</div>
								</Dialog.Panel>
							</Transition.Child>
						</div>
					</div>
				</Dialog>
			</Transition.Root>
		</>
	);
}
