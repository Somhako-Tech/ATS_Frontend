import Head from "next/head";
import React, { useRef, Fragment, useState } from "react";
import Image from "next/image";
import Skeleton from 'react-loading-skeleton'
import 'react-loading-skeleton/dist/skeleton.css'
import Slider from "react-slick";
import "slick-carousel/slick/slick.css";
import "slick-carousel/slick/slick-theme.css";
import { CircularProgressbar, buildStyles } from "react-circular-progressbar";
import "react-circular-progressbar/dist/styles.css";
import { Dialog, Popover, Transition } from "@headlessui/react";
import Button from "@/components/Button";
import Orgsidebar from "@/components/organization/SideBar";
import Orgtopbar from "@/components/organization/TopBar";
import userImg from "/public/images/user-image.png";
import customizeApplicants from "/public/images/icons/customize_applicants.png";
import customizeActivity from "/public/images/icons/customize_activity.png";
import customizeAnalytics from "/public/images/icons/customize_analytics.png";
import customizeRecent from "/public/images/icons/customize_recent.png";
import customizeTodo from "/public/images/icons/customize_todo.png";
import customizeUpcoming from "/public/images/icons/customize_upcoming.png";
import nodata_1 from "/public/images/no-data/icon-1.png";
import nodata_2 from "/public/images/no-data/icon-2.png";
import nodata_3 from "/public/images/no-data/icon-3.png";
import nodata_4 from "/public/images/no-data/icon-4.png";
import nodata_5 from "/public/images/no-data/icon-5.png";
import nodata_6 from "/public/images/no-data/icon-6.png";
import { getProviders, useSession } from "next-auth/react";
import ChatAssistance from "@/components/ChatAssistance";
import JobCard_1 from "@/components/JobCard-1";
import FormField from "@/components/FormField";
import Highcharts from 'highcharts';
import HighchartsReact from 'highcharts-react-official';
import Link from "next/link";
import googleIcon from "/public/images/social/google-icon.png"
import PreviewJob from "@/components/organization/PreviewJob";

export default function OrganizationDashboard() {
	const [sklLoad] = useState(true)
	const cancelButtonRef = useRef(null);
	const [previewPopup, setPreviewPopup] = useState(false);
	const [customizer1, setCustomizer1] = useState(true);
	const [customizer2, setCustomizer2] = useState(true);
	const [customizer3, setCustomizer3] = useState(true);
	const [customizer4, setCustomizer4] = useState(true);
	const [customizer5, setCustomizer5] = useState(true);
	const [customizer6, setCustomizer6] = useState(true);
	const settings = {
		dots: false,
		arrows: true,
		infinite: false,
		speed: 500,
		slidesToShow: 2.5,
		slidesToScroll: 1,
		rows: 2,
		prevArrow: (
			<button type="button" className="slick-arrow">
				<i className="fa-solid fa-chevron-left"></i>
			</button>
		),
		nextArrow: (
			<button type="button" className="slick-arrow">
				<i className="fa-solid fa-chevron-right"></i>
			</button>
		)
	};
	const aplc_status = [
		{
			percentage: '',
			title: "Total Pipelines",
			number: '',
			color: "#58E700",
			icon: <i className="fa-solid fa-timeline"></i>
		},
		{
			percentage: 10,
			title: "Total On Hold",
			number: 100,
			color: "#FFF616",
			icon: <i className="fa-solid fa-circle-pause"></i>
		},
		{
			percentage: 6,
			title: "Total Shortlisted",
			number: 99,
			color: "#58E700",
			icon: <i className="fa-solid fa-circle-check"></i>
		},
		{
			percentage: 10,
			title: "Total Hired",
			number: 100,
			color: "#58E700",
			icon: <i className="fa-solid fa-users"></i>
		},
		{
			percentage: +10,
			title: "Total In Review",
			number: 100,
			color: "#FE8F66",
			icon: <i className="fa-solid fa-eye"></i>
		},
		{
			percentage: 6,
			title: "Total Rejected",
			number: 100,
			color: "#FF4500",
			icon: <i className="fa-solid fa-circle-xmark"></i>
		},
		{
			percentage: 6,
			title: "Total Interviews",
			number: 100,
			color: "#FE8F66",
			icon: <i className="fa-solid fa-clipboard-question"></i>
		},
		{
			percentage: 6,
			title: "Aging Profiles",
			number: 100,
			color: "#FF4500",
			icon: <i className="fa-solid fa-user-group"></i>
		}
	];
	const { data: session } = useSession();
	const options = {
		chart: {
		  type: 'spline'
		},
		title: {
		  text: ''
		},
		series: [
		  {
			data: [1, 2, 1, 4, 3, 6]
		  }
		]
	};
	function handleCustomizer1() {
		setCustomizer1(!customizer1)
	}
	function handleCustomizer2() {
		setCustomizer2(!customizer2)
	}
	function handleCustomizer3() {
		setCustomizer3(!customizer3)
	}
	function handleCustomizer4() {
		setCustomizer4(!customizer4)
	}
	function handleCustomizer5() {
		setCustomizer5(!customizer5)
	}
	function handleCustomizer6() {
		setCustomizer6(!customizer6)
	}
	// function handleGaugeBtn() {
	// 	document.querySelector("html").classList.add('overflow-hidden')
	// }
	return (
		<>
			<Head>
				<title>Dashboard</title>
				<meta name="description" content="Generated by create next app" />
			</Head>
			<main>
				{session && <ChatAssistance accessToken={session.accessToken} /> }
				<Orgsidebar />
				<Orgtopbar />
				<div id="overlay" className="fixed left-0 top-0 z-[9] hidden h-full w-full bg-[rgba(0,0,0,0.2)] dark:bg-[rgba(255,255,255,0.2)]"></div>
				<div className="layoutWrap p-4 lg:p-8">
					<div id="dashboard" className="relative">
						<div className="mx-[-15px] flex flex-wrap">
							{
							customizer1 
							?
							<div className="mb-[30px] w-full px-[15px] lg:max-w-[50%]">
								<div className="h-full rounded-normal bg-white shadow dark:bg-gray-800">
									<div className="flex items-center justify-between p-6">
										<h2 className="text-xl font-bold">Applicant Details</h2>
										<aside className="flex items-center justify-end">
											<div className="w-[140px] mr-4">
												<FormField fieldType="select" />
											</div>
											<button type="button" className="h-[30px] w-[30px] rounded-full bg-darkGray text-gray-300 cursor-grab relative z-[1]">
												<i className="fa-regular fa-hand"></i>
											</button>
										</aside>
									</div>
									<div className="dashboardSlider p-6 pt-0">
										<Slider {...settings}>
											{aplc_status.map((item, i) => (
												<div key={i}>
													<div className="py-3 px-2">
														<div className="relative rounded-normal border-b-[4px] border-lightGray bg-white p-3 pr-5 shadow-highlight dark:bg-gray-700">
															<div className="mb-2 flex items-center justify-between">
																<h4 className="text-2xl font-extrabold grow pr-4">
																	{item.number || <Skeleton width={40}/>}
																</h4>
																<div className="rounded bg-lightGray py-1 px-2 text-[12px] text-white">{item.icon}</div>
															</div>
															<p className="mb-2 text-sm">{item.title}</p>
															<div style={{ width: 40, height: 40 }}>
																{
																	item.percentage
																	?
																	<>
																	<CircularProgressbar
																		value={item.percentage}
																		text={`${item.percentage}`}
																		styles={buildStyles({ pathColor: item.color, textSize: "26px", textColor: "#727272" })}
																	/>
																	</>
																	:
																	<Skeleton circle width={40} height={40}/>
																}
															</div>
															<div
																className={`absolute right-0 top-[50%] block h-[74px] w-[15px] translate-y-[-50%] border-[14px] border-transparent`}
																style={{ borderRightColor: item.color }}
															></div>
														</div>
													</div>
												</div>
											))}
										</Slider>
										<div className="text-center py-8">
											<div className="bg-gray-200 w-[100px] h-[100px] flex items-center justify-center mx-auto rounded-full mb-2 p-2">
												<Image src={nodata_1} alt="No Data" width={300} className="w-auto max-w-[60px] max-h-[60px]" />
											</div>
											<p className="text-sm text-darkGray">No Applicants</p>
										</div>
									</div>
								</div>
							</div>
							:
							<></>
							}
							{
							customizer2
							?
							<div className="mb-[30px] w-full px-[15px] lg:max-w-[50%]">
								<div className="h-full rounded-normal bg-white shadow dark:bg-gray-800">
									<div className="flex items-center justify-between p-6">
										<h2 className="text-xl font-bold">Hiring Analytics</h2>
										<aside>
											<button type="button" className="h-[30px] w-[30px] rounded-full bg-darkGray text-gray-300 cursor-grab">
												<i className="fa-regular fa-hand"></i>
											</button>
										</aside>
									</div>
									<div className="p-6 pt-0">
										<HighchartsReact highcharts={Highcharts} options={options} />
										<div className="text-center py-8">
											<div className="bg-gray-200 w-[100px] h-[100px] flex items-center justify-center mx-auto rounded-full mb-2 p-2">
												<Image src={nodata_2} alt="No Data" width={300} className="w-auto max-w-[60px] max-h-[60px]" />
											</div>
											<p className="text-sm text-darkGray">No Hiring Analytics</p>
										</div>
									</div>
								</div>
							</div>
							:
							<></>
							}
							{
							customizer3
							?
							<div className="mb-[30px] w-full px-[15px] lg:max-w-[50%]">
								<div className="h-full rounded-normal bg-white shadow dark:bg-gray-800">
									<div className="flex items-center justify-between p-6">
										<h2 className="text-xl font-bold">Upcoming Interviews</h2>
										<aside>
											<button type="button" className="h-[30px] w-[30px] rounded-full bg-darkGray text-gray-300 cursor-grab">
												<i className="fa-regular fa-hand"></i>
											</button>
										</aside>
									</div>
									<div className="p-6 pt-0">
										<div className="">
											{
												sklLoad
												?
												Array(6).fill(
													<div className="mb-3 flex flex-wrap items-center rounded-[10px] border py-2 px-3">
														<div className="flex w-[45%] items-center pr-2">
															<Image
																src={userImg}
																alt="User"
																className="rounded-full object-cover w-[30px] h-[30px]"
																width={100}
																height={100}
															/>
															<div className="pl-2 grow">
																<h5 className="text-sm font-bold">
																	Bethany Jackson
																</h5>
																<p className="text-[12px] text-darkGray">
																	Software Developer
																</p>
															</div>
														</div>
														<div className="w-[30%] pr-2">
															<h5 className="text-sm font-bold">
																20 Nov 2023
															</h5>
															<p className="text-[12px] text-darkGray">
																10:40 AM
															</p>
														</div>
														<div className="w-[20%]">
															<Button btnStyle="outlined" label="View Profile" loader={false} />
														</div>
														<div className="w-[5%] text-center">
															<Popover className="relative">
																<Popover.Button className={`text-lightGray`}>
																	<i className="fa-solid fa-ellipsis-vertical"></i>
																</Popover.Button>
																<Popover.Overlay className="fixed left-0 top-0 w-full h-full z-30 inset-0 bg-black opacity-30 dark:bg-white" />
																<Popover.Panel className="absolute right-0 z-40 w-[300px] overflow-hidden rounded-normal bg-white shadow-normal text-left p-4">
																	<h6 className="font-bold mb-4">Software Engineer</h6>
																	<div className="mb-4 max-h-[200px] overflow-auto">
																		{Array(2).fill(
																			<div className="flex items-center py-2">
																				<Image
																					src={userImg}
																					alt="User"
																					className="rounded-full object-cover w-[50px] h-[50px]"
																					width={100}
																					height={100}
																				/>
																				<div className="pl-2 grow">
																					<h5 className="text-sm font-bold">
																						Alison Macroy
																					</h5>
																					<p className="text-[12px] text-darkGray">
																						Interviewer
																					</p>
																				</div>
																			</div>
																		)}
																	</div>
																	<div className="border rounded-normal p-3">
																		<h6 className="font-bold text-sm">Platform</h6>
																		<div className="flex items-center py-2">
																			<Image
																				src={googleIcon}
																				alt="Meet"
																				className="rounded-full object-cover w-[35px] h-[35px]"
																				width={100}
																				height={100}
																			/>
																			<div className="pl-2 grow">
																				<p className="text-[12px] text-darkGray font-bold leading-1">
																					Google Meet
																				</p>
																				<Link href='#' className="text-[12px] inline-block text-primary hover:underline">
																					www.google.meet.com
																				</Link>
																				<p className="text-[10px] text-darkGray leading-1">
																					20 Nov 2023 - 10:40PM
																				</p>
																			</div>
																		</div>
																	</div>
																</Popover.Panel>
															</Popover>
														</div>
													</div>
												)
												:
												Array(6).fill(
													<div className="mb-3 flex flex-wrap items-center rounded-[10px] border py-2 px-3">
														<div className="flex w-[45%] items-center pr-2">
															<Skeleton circle width={30} height={30} />
															<div className="pl-2 grow">
																<h5 className="text-sm font-bold">
																	<Skeleton width={100} />
																</h5>
																<p className="text-[12px] text-darkGray">
																	<Skeleton width={60} />
																</p>
															</div>
														</div>
														<div className="w-[30%] pr-2">
															<h5 className="text-sm font-bold">
																<Skeleton width={100} />
															</h5>
															<p className="text-[12px] text-darkGray">
																<Skeleton width={50} />
															</p>
														</div>
														<div className="w-[20%]">
															<Skeleton height={28} />
														</div>
														<div className="w-[5%] text-center">
															<Skeleton width={6} height={20} />
														</div>
													</div>
												)
											}
										</div>
										<div className="text-center py-8">
											<div className="bg-gray-200 w-[100px] h-[100px] flex items-center justify-center mx-auto rounded-full mb-2 p-2">
												<Image src={nodata_3} alt="No Data" width={300} className="w-auto max-w-[60px] max-h-[60px]" />
											</div>
											<p className="text-sm text-darkGray">No Upcoming Interviews</p>
										</div>
									</div>
								</div>
							</div>
							:
							<></>
							}
							{
							customizer4
							?
							<div className="mb-[30px] w-full px-[15px] lg:max-w-[50%]">
								<div className="h-full rounded-normal bg-white shadow dark:bg-gray-800">
									<div className="flex items-center justify-between p-6">
										<h2 className="text-xl font-bold">To Do List</h2>
										<aside>
											<button type="button" className="h-[30px] w-[30px] rounded-full bg-darkGray text-gray-300 cursor-grab">
												<i className="fa-regular fa-hand"></i>
											</button>
										</aside>
									</div>
									<div className="p-6 pt-0">
										<div className="max-h-[330px] overflow-y-auto">
											{
												sklLoad
												?
												Array(6).fill(
													<div className="mb-3 flex flex-wrap rounded-[10px] border">
														<div className="flex w-[65%] items-center py-2 px-3">
															<p className="clamp_2 text-sm">
																Being able to rename and edit users lorem rename and edit users Being able to rename and
																edit users lorem rename and edit users Being able to rename and edit users lorem rename
																and edit users
															</p>
														</div>
														<div className="flex w-[35%] items-center justify-center bg-lightBlue px-3 py-6 dark:bg-gray-700">
															<span className="mr-2 rounded bg-[#FF8A00] px-[6px] py-[1px] text-center text-xl leading-normal text-white dark:bg-gray-800">
																<i className="fa-regular fa-square-check"></i>
															</span>
															<h5 className="font-bold">20 Nov 2023</h5>
														</div>
													</div>
												)
												:
												Array(6).fill(
													<div className="mb-3 flex flex-wrap rounded-[10px] border">
														<div className="flex w-[65%] items-center py-2 px-3">
															<Skeleton containerClassName="grow" count={2} />
														</div>
														<div className="flex w-[35%] items-center justify-center bg-lightBlue px-3 py-6 dark:bg-gray-700">
															<span className="mr-2 rounded bg-[#FF8A00] px-[6px] py-[1px] text-center text-xl leading-normal text-white dark:bg-gray-800">
																<i className="fa-regular fa-square-check"></i>
															</span>
															<h5 className="font-bold grow"><Skeleton height={12} /></h5>
														</div>
													</div>
												)
											}
										</div>
										<div className="text-center py-8">
											<div className="bg-gray-200 w-[100px] h-[100px] flex items-center justify-center mx-auto rounded-full mb-2 p-2">
												<Image src={nodata_4} alt="No Data" width={300} className="w-auto max-w-[60px] max-h-[60px]" />
											</div>
											<p className="text-sm text-darkGray">Nothing In To Do List</p>
										</div>
									</div>
								</div>
							</div>
							:
							<></>
							}
							{
							customizer5
							?
							<div className="mb-[30px] w-full px-[15px] lg:max-w-[50%]">
								<div className="h-full rounded-normal bg-white shadow dark:bg-gray-800">
									<div className="flex items-center justify-between p-6">
										<h2 className="text-xl font-bold">Recent Jobs</h2>
										<aside>
											<button type="button" className="h-[30px] w-[30px] rounded-full bg-darkGray text-gray-300 cursor-grab">
												<i className="fa-regular fa-hand"></i>
											</button>
										</aside>
									</div>
									<div className="p-6 pt-0">
										<div className="mx-[-7px] flex max-h-[330px] flex-wrap overflow-y-auto">
											{
												sklLoad
												?
												Array(5).fill(
													<div className="mb-[15px] w-full px-[7px] md:max-w-[50%]">
														<JobCard_1 handleClick={()=> setPreviewPopup(true)} />
													</div>
												)
												:
												Array(5).fill(
													<div className="mb-[15px] w-full px-[7px] md:max-w-[50%]">
														<JobCard_1 sklLoad={true} />
													</div>
												)
											}
										</div>
										<div className="text-center py-8">
											<div className="bg-gray-200 w-[100px] h-[100px] flex items-center justify-center mx-auto rounded-full mb-2 p-2">
												<Image src={nodata_5} alt="No Data" width={300} className="w-auto max-w-[60px] max-h-[60px]" />
											</div>
											<p className="text-sm text-darkGray">No Job has been posted yet</p>
										</div>
									</div>
								</div>
							</div>
							:
							<></>
							}
							<div className="mb-[30px] w-full px-[15px] lg:max-w-[50%]">
								<div className="h-full rounded-normal bg-white shadow dark:bg-gray-800 upgradePlan">
									<div className="flex items-center justify-between p-6">
										<h2 className="text-xl font-bold"></h2>
										<aside>
											<button type="button" className="h-[30px] w-[30px] rounded-full bg-white text-gray-300 cursor-grab">
												<i className="fa-regular fa-hand"></i>
											</button>
										</aside>
									</div>
								</div>
							</div>
							{
							customizer6
							?
							<div className="mb-[30px] w-full px-[15px] lg:max-w-[50%]">
								<div className="h-full rounded-normal bg-white shadow dark:bg-gray-800">
									<div className="flex items-center justify-between p-6">
										<h2 className="text-xl font-bold">Activity Log</h2>
										<aside>
											<button type="button" className="h-[30px] w-[30px] rounded-full bg-darkGray text-gray-300 cursor-grab">
												<i className="fa-regular fa-hand"></i>
											</button>
										</aside>
									</div>
									<div className="p-6 pt-0">
										<div className="max-h-[330px] overflow-y-auto">
											{
												sklLoad
												?
												Array(2).fill(
													<div className="mb-3 flex flex-wrap items-center rounded-[10px] border py-1 px-2">
														<div className="flex items-center justify-center p-3">
															<span className="mr-2 flex h-[40px] w-[40px] items-center justify-center rounded-full bg-gradDarkBlue text-lg leading-normal text-white">
																<i className="fa-solid fa-briefcase"></i>
															</span>
															<p className="w-[calc(100%-40px)]">
																<b>Product Manager </b>
																Job has been posted by the Adam Smith
															</p>
														</div>
													</div>
												)
												:
												Array(2).fill(
													<div className="mb-3 flex flex-wrap items-center rounded-[10px] border py-1 px-2">
														<div className="flex items-center justify-center p-3">
															<Skeleton circle width={40} height={40} />
															<p className="w-[calc(100%-40px)] pl-4">
																<Skeleton width={200} />
																<Skeleton width={100} />
															</p>
														</div>
													</div>
												)
											}
											{Array(2).fill(
												<>
													<div className="mb-3 flex flex-wrap items-center rounded-[10px] border py-1 px-2">
														<div className="flex items-center justify-center p-3">
															<div className="mr-2 flex h-[40px] w-[40px] items-center justify-center rounded-full bg-[#FF930F] text-lg leading-normal text-white">
																<i className="fa-solid fa-star"></i>
															</div>
															<p className="w-[calc(100%-40px)]">
																<b>New User - Alison Will </b>
																has logged in as an <b>Admin</b>
															</p>
														</div>
													</div>
												</>
											)}
										</div>
										<div className="text-center py-8">
											<div className="bg-gray-200 w-[100px] h-[100px] flex items-center justify-center mx-auto rounded-full mb-2 p-2">
												<Image src={nodata_6} alt="No Data" width={300} className="w-auto max-w-[60px] max-h-[60px]" />
											</div>
											<p className="text-sm text-darkGray">Nothing in the Activity Log</p>
										</div>
									</div>
								</div>
							</div>
							:
							<></>
							}
						</div>
						<aside className="absolute left-0 top-0 rounded-tl-normal rounded-br-normal bg-lightBlue p-3 dark:bg-gray-700">
							<Popover className="relative">
								<Popover.Button className={`flex h-[45px] w-[45px] items-center justify-center rounded-[10px] bg-gradient-to-b from-gradLightBlue to-gradDarkBlue text-2xl text-white hover:from-gradDarkBlue hover:to-gradDarkBlue focus:outline-none`}>
									<i className="fa-solid fa-gauge"></i>
								</Popover.Button>
								<Popover.Overlay className="fixed left-0 top-0 w-full h-full z-30 inset-0 bg-black opacity-30 dark:bg-white" />
								<Popover.Panel className="absolute z-40 w-[300px] overflow-hidden rounded-normal bg-white shadow-normal">
									<div className="flex flex-wrap">
										<label
											htmlFor="cust_applicants"
											className="relative flex h-[100px] w-[100px] cursor-pointer flex-col items-center justify-center overflow-hidden bg-gradient-to-r from-[#DCFFFB] to-[#A3CEFF] dark:from-gradLightBlue dark:to-gradDarkBlue p-2 text-center"
										>
											<input type="checkbox" name="cust_dashboard" id="cust_applicants" className="hidden" onClick={handleCustomizer1} />
											<Image src={customizeApplicants} alt="Applicants" className="mb-2" />
											<p className="text-[12px] font-bold">Applicant Details</p>
											<i className={`fa-solid ${customizer1 ? 'fa-eye' : 'fa-eye-slash'} text-[12px] flex items-center justify-center absolute left-1 top-2 rounded-full w-6 h-4 leading-[1px]`}></i>
										</label>
										<label
											htmlFor="cust_hiring"
											className="relative flex h-[100px] w-[100px] cursor-pointer flex-col items-center justify-center overflow-hidden bg-gradient-to-r from-[#DCFFFB] to-[#A3CEFF] dark:from-gradLightBlue dark:to-gradDarkBlue p-2 text-center"
										>
											<input type="checkbox" name="cust_dashboard" id="cust_hiring" className="hidden" onChange={handleCustomizer2} />
											<Image src={customizeAnalytics} alt="Hiring Analytics" className="mb-2" />
											<p className="text-[12px] font-bold">Hiring Analytics</p>
											<i className={`fa-solid ${customizer2 ? 'fa-eye' : 'fa-eye-slash'} text-[12px] flex items-center justify-center absolute left-1 top-2 rounded-full w-6 h-4 leading-[1px]`}></i>
										</label>
										<label
											htmlFor="cust_upcoming"
											className="relative flex h-[100px] w-[100px] cursor-pointer flex-col items-center justify-center overflow-hidden bg-gradient-to-r from-[#A3CEFF] to-[#DCFFFB] dark:from-gradDarkBlue dark:to-gradLightBlue p-2 text-center"
										>
											<input type="checkbox" name="cust_dashboard" id="cust_upcoming" className="hidden" onChange={handleCustomizer3} />
											<Image src={customizeUpcoming} alt="Upcoming Interviews" className="mb-2" />
											<p className="text-[12px] font-bold">Upcoming Interviews</p>
											<i className={`fa-solid ${customizer3 ? 'fa-eye' : 'fa-eye-slash'} text-[12px] flex items-center justify-center absolute left-1 top-2 rounded-full w-6 h-4 leading-[1px]`}></i>
										</label>
										<label
											htmlFor="cust_todo"
											className="relative flex h-[100px] w-[100px] cursor-pointer flex-col items-center justify-center overflow-hidden bg-gradient-to-r from-[#DCFFFB] to-[#A3CEFF] dark:from-gradLightBlue dark:to-gradDarkBlue p-2 text-center"
										>
											<input type="checkbox" name="cust_dashboard" id="cust_todo" className="hidden" onChange={handleCustomizer4} />
											<Image src={customizeTodo} alt="To Do List" className="mb-2" />
											<p className="text-[12px] font-bold">To Do List</p>
											<i className={`fa-solid ${customizer4 ? 'fa-eye' : 'fa-eye-slash'} text-[12px] flex items-center justify-center absolute left-1 top-2 rounded-full w-6 h-4 leading-[1px]`}></i>
										</label>
										<div className="relative flex h-[100px] w-[100px] flex-col items-center justify-center overflow-hidden bg-white dark:bg-primary p-2 text-center">
											<p className="text-[12px] font-bold">
												Customize <br />
												Your <br />
												Dashboard
											</p>
										</div>
										<label
											htmlFor="cust_recent"
											className="relative flex h-[100px] w-[100px] cursor-pointer flex-col items-center justify-center overflow-hidden bg-gradient-to-r from-[#A3CEFF] to-[#DCFFFB] dark:from-gradDarkBlue dark:to-gradLightBlue p-2 text-center"
										>
											<input type="checkbox" name="cust_dashboard" id="cust_recent" className="hidden" onChange={handleCustomizer5} />
											<Image src={customizeRecent} alt="Recent Jobs" className="mb-2" />
											<p className="text-[12px] font-bold">Recent Jobs</p>
											<i className={`fa-solid ${customizer5 ? 'fa-eye' : 'fa-eye-slash'} text-[12px] flex items-center justify-center absolute left-1 top-2 rounded-full w-6 h-4 leading-[1px]`}></i>
										</label>
										<label
											htmlFor="cust_activity"
											className="relative flex h-[100px] w-[100px] cursor-pointer flex-col items-center justify-center overflow-hidden bg-gradient-to-r from-[#DCFFFB] to-[#A3CEFF] dark:from-gradLightBlue dark:to-gradDarkBlue p-2 text-center"
										>
											<input type="checkbox" name="cust_dashboard" id="cust_activity" className="hidden" onChange={handleCustomizer6} />
											<Image src={customizeActivity} alt="Activity Log" className="mb-2" />
											<p className="text-[12px] font-bold">Activity Log</p>
											<i className={`fa-solid ${customizer6 ? 'fa-eye' : 'fa-eye-slash'} text-[12px] flex items-center justify-center absolute left-1 top-2 rounded-full w-6 h-4 leading-[1px]`}></i>
										</label>
										<div className="relative flex h-[100px] w-[100px] flex-col items-center justify-center overflow-hidden bg-gradient-to-r from-[#DCFFFB] to-[#A3CEFF] dark:from-gradLightBlue dark:to-gradDarkBlue p-2 text-center"></div>
										<div className="relative flex h-[100px] w-[100px] flex-col items-center justify-center overflow-hidden bg-gradient-to-r from-[#DCFFFB] to-[#A3CEFF] dark:from-gradLightBlue dark:to-gradDarkBlue p-2 text-center"></div>
									</div>
								</Popover.Panel>
							</Popover>
						</aside>
					</div>
				</div>
			</main>
			<Transition.Root show={previewPopup} as={Fragment}>
				<Dialog as="div" className="relative z-40" initialFocus={cancelButtonRef} onClose={setPreviewPopup}>
					<Transition.Child
						as={Fragment}
						enter="ease-out duration-300"
						enterFrom="opacity-0"
						enterTo="opacity-100"
						leave="ease-in duration-200"
						leaveFrom="opacity-100"
						leaveTo="opacity-0"
					>
						<div className="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" />
					</Transition.Child>

					<div className="fixed inset-0 z-10 overflow-y-auto capitalize">
						<div className="flex min-h-full items-end justify-center p-4 text-center sm:items-center">
							<Transition.Child
								as={Fragment}
								enter="ease-out duration-300"
								enterFrom="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
								enterTo="opacity-100 translate-y-0 sm:scale-100"
								leave="ease-in duration-200"
								leaveFrom="opacity-100 translate-y-0 sm:scale-100"
								leaveTo="opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95"
							>
								<Dialog.Panel className="relative min-h-screen w-full transform overflow-hidden rounded-[30px] bg-[#FBF9FF] text-left text-black shadow-xl transition-all dark:bg-gray-800 dark:text-white sm:max-w-full">
									<div className="py-3 px-6 text-right">
										<button
											type="button"
											className="leading-none hover:text-gray-700"
											onClick={() => setPreviewPopup(false)}
										>
											<i className="fa-solid fa-xmark"></i>
										</button>
									</div>
									<PreviewJob />
									<div className="py-4 px-8">
										<Button label="Close" btnType="button" handleClick={() => setPreviewPopup(false)} />
									</div>
								</Dialog.Panel>
							</Transition.Child>
						</div>
					</div>
				</Dialog>
			</Transition.Root>
		</>
	);
}

export async function getServerSideProps(context: any) {
	const providers = await getProviders();
	return {
		props: {
			providers
		}
	};
}
